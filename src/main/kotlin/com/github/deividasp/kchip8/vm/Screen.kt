package com.github.deividasp.kchip8.emulator

/**
 * @author Deividas Popelskis <deividas.popelskis@gmail.com>
 */
class Screen {

    private val pixels = BooleanArray(SCREEN_WIDTH * SCREEN_HEIGHT)

    fun reset() {
        pixels.forEachIndexed { i, _ -> pixels[i] = false }
    }

    fun setPixelActive(x: Int, y: Int, active: Boolean) {
        pixels[x + y * SCREEN_WIDTH] = active
    }

    fun isPixelActive(x: Int, y: Int) = pixels[x + y * SCREEN_WIDTH]

    companion object {
        val FONT_DATA = arrayOf(
                0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
                0x20, 0x60, 0x20, 0x20, 0x70, // 1
                0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
                0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
                0x90, 0x90, 0xF0, 0x10, 0x10, // 4
                0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
                0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
                0xF0, 0x10, 0x20, 0x40, 0x40, // 7
                0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
                0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
                0xF0, 0x90, 0xF0, 0x90, 0x90, // A
                0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
                0xF0, 0x80, 0x80, 0x80, 0xF0, // C
                0xE0, 0x09, 0x90, 0x90, 0xE0, // D
                0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
                0xF0, 0x80, 0xF0, 0x80, 0x80  // F
        )

        const val SPRITE_WIDTH = 8
        const val SCREEN_WIDTH = 64
        const val SCREEN_HEIGHT = 32
        const val FONT_CHARACTER_LENGTH = 5
    }

}